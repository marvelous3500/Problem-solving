 *Exercise 4*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with `1` and `2`, the first `10 `terms will be:
`1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms. 


def fibonacci(number):
    if number <= 1:
        return number
    return fibonacci(number - 1) + fibonacci(number - 2)

def increment_number(variable):
    variable += 1
    return variable

def get_even_fibonacci_sum():
    even_sum = 0
    number_builder = 0
    while True:
        number_builder = increment_number(number_builder)
        fibonacci_result = fibonacci(number_builder)
        if fibonacci_result <= 4000000:
            if fibonacci_result % 2 == 0:
                even_sum += fibonacci_result
        else:
            return even_sum

if __name__ == "__main__":
  print(get_even_fibonacci_sum())
